server:
  port: 8000
  
eureka:  client:    register-with-eureka: true  
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:    prefer-ip-address: true
    ip-address: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    
spring:  application:    name: api-gateway
  cloud:    gateway:
      default-filters:      - name: GlobalFilter
        args:
          baseMessage: Spring Cloud Gateway GlobalFilter
          preLogger: true
          postLogger: true      routes:#      - id: USER-SERVICE
#        uri: lb://USER-SERVICE
#        predicates:
#        - Path=/user-service/**
      - id: USER-SERVICE
        uri: lb://USER-SERVICE
        predicates:
        - Path=/user-service/login
        - Method=POST
        filters:        - RemoveRequestHeader=Cookie
        - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        
      - id: USER-SERVICE
        uri: lb://USER-SERVICE
        predicates:
        - Path=/user-service/users
        - Method=POST
        filters:        - RemoveRequestHeader=Cookie
        - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        
      - id: USER-SERVICE
        uri: lb://USER-SERVICE
        predicates:
        - Path=/user-service/**
        - Method=GET
        filters:        - RemoveRequestHeader=Cookie
        - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - AuthorizationHeaderFilter
        
        
      - id: catalog-service
        uri: lb://CATALOG-SERVICE
        predicates:
        - Path=/catalog-service/**
      - id: order-service
        uri: lb://ORDER-SERVICE
        predicates:
        - Path=/order-service/**
              - id: userservice-02
        #uri: http://127.0.0.1:8082
        uri: lb://USERSERVICE-02
        predicates:        - Path=/userservice-02/**        filters:
        - AddRequestHeader=second-request, second-request-header2
        - AddResponseHeader=second-response, second-response-header2
        - name: CustomFilter
        - name: LoggingFilter
          args:
            baseMessage: Hello World!
            preLogger: true
            postLogger: false
            
            
token:
  secret: user_token
    
              